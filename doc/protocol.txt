Protocol Info
-------------

Message Structure (bi-directional):
Segment				Length
---------------------------------
Frame start			1 byte (0x7e)
Length				1 byte
Command				1 byte
Payload				0 - 254 bytes
Checksum			1 byte

Commands:
---------
There are four logical message types: 
1) PC initiates a message to Stubby
2) Stubby responds to a message from PC
3) Stubby initiates a message to PC
4) PC responds to a message from Stubby

Message types 1 and 2 comprise the majority of communication.  Message 
types 3 and 4 imply an event-driven programming model.  Initially, we 
do not want to do this as it adds complexity to the new programmer,
however we do not want to preclude this from being added at a later 
date.

Commands have a variable payload.  A description of payloads is below.
Portions in [square brackets] are optional.

Command						Direction				Payload																				Response
-------------------------------------------------------------------------------------------------------------------------------------------------------------
-- General commands
SendAcknowledge				Stubby -> Control		Command being ack'd (1 byte)														None
SendComplete				Stubby -> Control		Command completed (1 byte)															None

RequestControlConfig		Control -> Stubby		Controller ID; UC = 0x55 ('U'), Processing = 0x50 ('P'), Calibration = 'C', etc		None
SendControlConfig			Stubby -> Control		Configuration for controller														None

RequestEnableDebug			Control -> Stubby		Null																				Ack
RequestDisableDebug			Control -> Stubby		Null																				Ack
SendDebug					Stubby -> Control		Variable depending on message, max 254 bytes										None

RequestBattery				Control -> Stubby		Null																				Battery message
SendBattery					Stubby -> Control		1 byte																				None

-- Universal Controller commands
UCButtonPush				Control -> Stubby		Index of button which was just pressed (1 byte)										None
UCButtonRelease				Control -> Stubby		Index of button which was just released (1 byte)									None
UCJoystickMove				Control -> Stubby		Value of all joystick axis (4 bytes, order LX:LY:RX:RY)								None

-- Processing API commands
RequestPowerOn				Control -> Stubby		Null																				Ack
RequestPowerOff				Control -> Stubby		Null																				Ack

RequestMove					Control -> Stubby		Angle (1 byte), Velocity (1 byte), Distance (2 bytes)								Ack + Complete when done
RequestTurn					Control -> Stubby		Angle (1 bytes), Velocity (1 byte)													Ack + Complete when done
RequestTranslate			Control -> Stubby		Amount (3 bytes, order X, Y, Z)														Ack
RequestRotate				Control -> Stubby		Axis (1 byte), Angle (1 byte)														Ack

RequestHeading				Control -> Stubby		Null																				Heading message
SendHeading					Stubby -> Control		Angle (1 byte)																		None

RequestDistance				Control -> Stubby		Null																				Distance message
SendDistance				Stubby -> Control		Distance (2 bytes, MSB first)																	None

RequestOptical				Control -> Stubby		Null																				Optical message
SendOptical					Stubby -> Control		1 byte / sensor (TODO: How many sensors?)											None

RequestSetLED				Control -> Stubby		3 bytes (RGB value)																	Ack

-- Calibration program commands
RequestJointCalibration		Control -> Stubby		Null																				SendJointCalibration message
SendJointCalibration		Either -> Either		18 bytes, ordered LEG0_TIBIA, LEG0_FEMUR, LEG0_COXA, ... LEG5_COXA					None

RequestFootCalibration		Control -> Stubby		Null																				SendFootCalibration message
SendFootCalibration			Either -> Either		18 bytes, ordered LEG0_X, LEG0_Y, LEG0_Z, LEG1_X, ... LEG5_Z						None

RequestMagnetometerCalibration	Control -> Stubby	Null																				SendMagnetometerCalibration message
SendMagnetometerCalibration	Either -> Either		4 bytes (two 16 bit signed integers, MSB first): X offset, Y offset					None
StartMagnetometerCalibration	Control -> Stubby	Null																				Repeated SendMagnetometerCalibration messages